---
// @ts-nocheck
const { info } = Astro.props;
const { index, slug, day, band, genre, stage, start, end, spotify, videos } = info;
const infoData = JSON.stringify(info);
import Details from "../Details/Details.astro";
import Link from "../Link/Link.astro";
import Image from "../Image/Image.astro";
import S from "./BandInfo.module.css";
---

<article class={`${S["band-info"]} ${S[`_${stage}`]}`} data-info={infoData}>
  <h2 transition:name={`band-${slug}`} data-index={index} class={S._band}>{band}</h2>
  <h3 class={S["_info-title"]}>Día <span class={S._day}>{day}</span></h1>
  <h3 class={S["_info-title"]}>Genero musical: <strong class={S._genre}>{genre}</strong></h3>
  <section class={S["_info-title"]}>
    <p transition:name={`hours-${slug}`}>Tocan en el escenario: <strong class={S._stage}>{stage}</strong></p>
  </section>
  <section class={S._time}>
    <p>Hora <span>{start} - {end}</span></p>
  </section>
  {spotify && spotify !== "#" && <section class={S._spotify}>
    <Link
      href={spotify}
      target="_blank"
      >
      <Image src="/img/spotify.png" alt="Spotify" class={S._image} />
    </Link>
  </section>}
  {videos && (<section  class={S._videos}>
    {
      videos.map(({ id, title }) => (
        id && <Details id={id} title={title} />
      ))
    }
  </section>)}
  <band-info-likes data-index={index} data-day={day}>
    <button
      class={S.likeButton}
      data-index={index}
      data-day={day}
      id={`like-${index}`}
      data-button="like"
    >
      ❤️ Like
    </button>
    <div class={S["_likes-container"]} data-container={index}></div>
  </band-info-likes>
</article>

<script type="module" is:inline>
  import '/utils/band-info-likes.js';
</script>
